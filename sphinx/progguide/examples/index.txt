.. highlight:: python
   :linenothreshold: 0

Programming examples
====================

Subsequent chapters present how a typical code to perform a given operation,
such as manipulating JSON or XML, will look like. It is assummed the reader has already
completed
:doc:`the tutorial <../../tutorial/01>`, 
is familiar with Zato's
:doc:`architecture <../../architecture/overview>`
and read about
:doc:`channels <../channels>`
and
:doc:`outgoing connections <../outconn/overview>` - concepts explained in these chapters are not repeated here.

.. note ::

  Depending on how you write code, in what data format, it's possible to write it once only
  and expose it 
  :doc:`through <../../web-admin/channels/amqp>`
  :doc:`multiple <../../web-admin/channels/jms-wmq>`
  :doc:`channels <../../web-admin/channels/plain-http>`
  :doc:`simultaneously <../../web-admin/channels/soap>`
  :doc:`without <../../web-admin/channels/zmq>`
  any code changes,
  without programming and without server restarts either.
  
  If you use
  :doc:`SimpleIO (SIO) <../sio>`, 
  the same code can be made available through many independent channels
  using JSON or XML simultaneously.
  
  Also, unless you're implementing a custom security scheme, services can assume that the
  fact they're invoked means that previous authentication/authorization layers granted a client
  application access. You don't need to code security.

=========================================== ================================================================================================
Topic                                       Examples
=========================================== ================================================================================================
:doc:`HTTP <./http>`                        * :ref:`Exposing a service over HTTP <progguide-examples-http-exposing>`
                                            * :ref:`Accessing raw request <progguide-examples-http-raw-request>`
                                            * :ref:`Accessing request headers <progguide-examples-http-request-headers>`
                                            * :ref:`Setting response headers <progguide-examples-http-response-headers>`
                                            * :ref:`Setting content type and status code <progguide-examples-http-content-type-status-code>`
                                            * :ref:`Returning attachments <progguide-examples-http-attachments>`
                                            
:doc:`SimpleIO (SIO) <./sio>`               * :ref:`Making a service accept and return JSON/XML/SOAP <progguide-examples-sio-service>`
                                            
:doc:`JSON <./json>`                        * :ref:`Accessing JSON request <progguide-examples-json-request>`
                                            * :ref:`Converting JSON to Bunch <progguide-examples-json-bunch>`
                                            * :ref:`Returning JSON <progguide-examples-json-responses>`
                                            * :ref:`Invoking a JSON service using GET <progguide-examples-json-invoking-get>`
                                            * :ref:`Invoking a JSON service using POST <progguide-examples-json-invoking-post>`
                                            
:doc:`XML <./xml>`                          * :ref:`Accessing XML request <progguide-examples-xml-request>`
                                            * :ref:`Creating responses <progguide-examples-xml-responses>`
                                            * :ref:`Invoking an XML service<progguide-examples-xml-invoking>`

:doc:`SOAP <./soap>`                        * :ref:`Accessing SOAP request <progguide-examples-soap-request>`
                                            * :ref:`Creating responses <progguide-examples-soap-response>`
                                            * :ref:`Invoking a SOAP service <progguide-examples-soap-invoking>`
                                            
:doc:`CSV <./csv>`                          * :ref:`Reading CSV on input <>`
                                            * :ref:`Producing CSV <>`
                                            * :ref:`Turning JSON/XML/SOAP into CSV and vice-versa <>`
                                            
:doc:`Other data formats <./other-formats>` * :ref:`Reading arbitrary data formats <>`
                                            * :ref:`Accessing BASE64-encoded data <>`
                                            
:doc:`AMQP <./amqp>`                        * :ref:`Receiving messages from queues <>`
                                            * :ref:`Sending messages to exchanges <>`
                                            
:doc:`FTP <./ftp>`                          * :ref:`Putting files on server <>`
                                            * :ref:`Periodically checking for new files <>`
                                            * :ref:`Listing directories <>`
                                            * :ref:`Reading files <>`
                                            
:doc:`JMS WebSphere MQ <./jms-wmq>`         * :ref:`Receiving messages from queues <>`
                                            * :ref:`Sending messages to queues <>`
                                            
:doc:`Redis <./redis>`                      * :ref:`Simple keys <>`
                                            * :ref:`Sets <>`
                                            * :ref:`Dictionaries <>`
                                            * :ref:`Transactions <>`
                                            
:doc:`Scheduler <./scheduler>`              * :ref:`Invoking services at predefined intervals <>`

:doc:`SQL <./sql>`                          * :ref:`Issuing raw SQL <>`
                                            * :ref:`SQLAlchemy <>`
                                            * :ref:`Turning SQL into JSON/XML/SOAP <>`
:doc:`ZeroMQ <./zmq>`                       * :ref:`Receiving messages from sockets <>`

                                            * :ref:`Sending messages to sockets <>`
=========================================== ================================================================================================