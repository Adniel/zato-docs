BST - REST API for diagramming
==============================

Overview
--------

Definitions and instances of :doc:`BST <./index>` can be output to diagrams through a REST API offering several endpoints
each driven by a set of parameters.

All of the parameters endpoints accept can be provided either in URL query string or in JSON payload. The former
takes precedence in case of conflicts.

Default user credentials to call the API are those set during :doc:`installation <./install>`.

Note that there is also available a :doc:`REST API for integrating external applications <./rest-ext>` using BST.

/bst/get-definition
-------------------

Returns a BST definition as a diagram, JSON or plain text.

Input:

============ ======== ============= ================================================================================
Parameter    Required Default value Notes
============ ======== ============= ================================================================================
def_name     Yes      (None)        Name of the definition to return
def_version  ---      1             Version of the definition to return
format       ---      diagram-png   Ouput format, must be one of 'diagram-def', 'diagram-png', 'json', 'text'
node_width   ---      200           In PNG output, width of nodes in the tree of transitions, in pixels
orientation  ---      portrait      In PNG output, whether to lay out the diagram vertically or horizontally.
                                    Must be one of portrait or landscape.
============ ======== ============= ================================================================================

::

  # Redirect output to a file
  $ curl http://bst:$PWD@localhost:17010/bst/get-definition?def_name=Account > def.png
  $ 

.. image:: /gfx/proc/bst/open.account.def.png

Root nodes are indicated by the tilde *~* in text output:

::

  $ curl "http://bst:$PWD@localhost:17010/bst/get-definition?def_name=Account&format=text"
   * ~Consent given       -> Has account
   * Has account          -> Welcome message sent
  $

The same definition in JSON:

::

  $ curl "http://bst:$PWD@localhost:17010/bst/get-definition?def_name=Account&format=json"
  {
    "Account": {
      "objects": "Customer", 
      "Consent given": "Has account", 
      "Has account": "Welcome message sent"
    }
  }
  $ 

/bst/get-current-state-info
---------------------------

Returns information on current state of a business object by its ID. In PNG output the state is highlighted. If there was
a previous state for this object, that state is highlighted as well.

For states that were :ref:`forcibly set <proc-bst-progguide-force>` for the object, *(f)* is appended to the state's name
to indicate the fact.

Input:

==================== ======== ===================== ==========================================================================================================
Parameter            Required Default value         Notes
==================== ======== ===================== ==========================================================================================================
object_type          Yes      (None)                Type of the object to return current state for
object_id            Yes      (None)                ID of the object to return current state for
format               ---      diagram-png           Output format, must be one of 'diagram-def', 'diagram-png', 'json'
def_name             ---      (None)                If the object belongs to more than one definition and providing the object's
                                                    name and ID could be ambiguous, def_name is the name of the definition
                                                    to return the state of the object's in
def_version          ---      (None)                Same as def_name but points to a definition's version
node_width           ---      200                   In PNG output, width of nodes in the tree of transitions, in pixels
orientation          ---      portrait              In PNG output, whether to lay out the diagram vertically or horizontally.
date_time_format     ---      %a %d/%m/%y %H:%M:%S  In PNG output, how to format date/time of transitions. Uses directives
                                                    Python's
                                                    `datetime.strftime <https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior>`_
                                                    uses.
time_zone            ---      UTC                   Time zone to output transition date/time in, such as EST or Europe/London.
                                                    Click here for the
                                                    `full list <https://github.com/zatosource/zato-labs/blob/master/bst/bst-tz.txt>`_
                                                    of values accepted.
highlight_color      ---      bccc73                Background color to highlight current and previous states with.
include_force_stop   ---      True                  If the definition contains any :ref:`forced stop states <proc-bst-author-force>`,
                                                    whether they should be included in PNG output or not.
==================== ======== ===================== ==========================================================================================================

The call with curl is split over two lines for clarity:

::

  $ curl "http://bst:$PWD@localhost:17010/bst/get-current-state-info?object_type=
    Customer&object_id=1&node_width=170&time_zone=EST" > cust.1.png
  $

.. image:: /gfx/proc/bst/cust_current.png
