2.0 - Currently in development
==============================

* REST
  :doc:`services <../progguide/rest/services>`,
  :doc:`channels <../progguide/rest/channels>`,
  :doc:`outgoing connections <../progguide/rest/outconns>`
  and
  :doc:`a helper JSON adapter <../progguide/rest/json-adapter>`

* :doc:`Redis-based REST publish/subscribe <../pubsub/index>`

* HTTP GUI Audit Log for requests and responses

* Patterns: fan-out/fan-in, parallel execution and invoke/retry

* Cloud :doc:`Amazon S3 <../web-admin/cloud/aws/s3>`

* Cloud OpenStack Swift :doc:`connections <../web-admin/cloud/openstack/swift>` and :doc:`notifications <../web-admin/notif/openstack/swift>`

* :doc:`SQL notifications <../web-admin/notif/sql>`

* :doc:`Cassandra connections <../web-admin/conn-def/cassandra>` and :doc:`pre-compiled CQL query templates <../web-admin/query/cassandra>`

* :doc:`Solr <../web-admin/search/solr>`

* :doc:`ElasticSearch <../web-admin/search/es>`

* :doc:`Odoo/OpenERP connections <../web-admin/outgoing/odoo>`

* :doc:`SSL/TLS for channels and outgoing connections <../admin/guide/tls/overview>`

* :doc:`Role-based access control (RBAC) for HTTP channels <../admin/guide/rbac/overview>`

* :doc:`OAuth <../web-admin/security/oauth>`

* :doc:`XPath-based security <../web-admin/security/xpath>`

* :doc:`API keys-based security <../web-admin/security/apikey>`

* :doc:`NTLM security <../web-admin/security/ntlm>`

* :doc:`Amazon AWS security <../web-admin/security/aws>`

* :ref:`Support for SQLite <admin-guide-config-server-odb.engine>`

* :ref:`Support for MySQL <admin-guide-config-server-odb.engine>`

* :doc:`SMTP <../web-admin/email/smtp>`

* :doc:`IMAP <../web-admin/email/imap>`

* :doc:`JSON Pointers <../web-admin/messages/json-pointer>`

* :doc:`XPath <../web-admin/messages/xpath>` and :doc:`XML Namespaces<../web-admin/messages/xml-ns>`

* JSON serialization in :doc:`HTTP outconns <../web-admin/outgoing/plain-http>`

* :doc:`SOAP invocations <../web-admin/outgoing/soap>` with suds and WSDL prefetching

* :doc:`Outgoing HTTP <../web-admin/outgoing/plain-http>` timeouts

* :ref:`New Relic integration <admin-guide-config-server-newrelic>`

* :ref:`Sentry integration <admin-guide-config-server-sentry>`

* :doc:`Redis HA with sentinels <../../admin/guide/redis-ha/sentinels>`

* :ref:`Statistics in Redis pruned periodically <admin-guide-config-stats.expire_after>`

* New SIO types: CSV, Dict, Float, ForceType, List, ListOfDicts, Opaque

* Message mappers

* Distributed locks

* Date/time utils

* Dictionary and list message navigation

* Added :doc:`RPM packages for RHEL/CentOS 7 <../admin/guide/install-rhel>`

* Added a set of :doc:`Dockerfiles <../admin/guide/install-docker>`

* Bash completion

* :ref:`Ability to specify user locale in servers (i.e. en_GB.UTF-8) <admin-guide-config-server-misc.locale>`

* Startup scripts to start Zato environments when an OS starts

* Framework for API testing (https://github.com/zatosource/zato-apitest)

* Ability to output HTML in services using Django templates

* Logging configuration migrated to YAML

* Ability to :ref:`hot-deploy code directly from a repository checkout <admin-guide-config-server-hot_deploy.delete_after_pick_up>`
  (i.e. from GitHub)

* Improved logging - subsystems have their own log files

* Web-admin's logs showing IP of the user connecting to it

* Apache-like HTTP access log for servers, compatible with popular log parsing tools

* Ability for users to store configutation in their own :ref:`INI-style files <admin-guide-config-server-user_config>`

* zato --version is clearer what exact git commit was used to build it

* Quickstart scripts remove stale PID files automatically

* Started using async Postgres driver to improve performance

* Made :doc:`zato start <../admin/cli/start>` command work much faster

* `Alembic migrations <https://github.com/zatosource/zato/tree/master/code/alembic/versions>`_ to ease with :doc:`upgrades across releases <../admin/guide/migrate/overview>`

* Ability to `run servers in Python shell <https://zato.io/blog/posts/running-servers-in-foreground.html>`_

* Made :doc:`service listings in web admin much faster <../web-admin/services/main>`

* Ability to dump threads on a user signal

* User-defined Lua functions for Redis

* New :doc:`tests <../admin/cli/check-config>` run prior to starting of components make sure the latter are correctly configured

* Command to run ipython with Zato-related packages on PYTHONPATH

* :ref:`Startup <admin-guide-config-server-startup_services_first_worker>` :ref:`services <admin-guide-config-server-startup_services_any_worker>` invoked when a server is starting

* :ref:`OpenID in web admin <admin-guide-config-web-admin-open-id>`

* Constants in `zato.common.broker_message <https://github.com/zatosource/zato/blob/master/code/zato-common/src/zato/common/broker_message.py>`_
  became wrappers around integers - use *.value* attribute to reference them. For instance, SERVICE.PUBLISH.value instead of SERVICE.PUBLISH.

* Added a :ref:`hot_deploy.delete_after_pick_up <admin-guide-config-server-hot_deploy.delete_after_pick_up>` flag,
  setting of which to False will prevent Zato from deleting hot-deployed Python code effectively
  making servers work in a live-reload mode

* Made 
  :doc:`HTTP Basic Auth <../web-admin/security/basic-auth>` passwords optional, including the 
  :doc:`underlying API <../public-api/details/zato.security.basic-auth.change-password>`

* Made it possible to specify an HTTP method to ping outgoing
  :doc:`HTTP <../web-admin/outgoing/plain-http>`/:doc:`SOAP <../web-admin/outgoing/soap>`
  connections with

* Added the ability to specify the size of each outgoing 
  :doc:`HTTP <../web-admin/outgoing/plain-http>`/:doc:`SOAP <../web-admin/outgoing/soap>`
  connection's pool size  (this is a per-worker setting)

* Made :ref:`Service.log_input <progguide-write-service-log_input>`/:ref:`output <progguide-write-service-log_output>` 
  log the user_msg as a prefix of the dictionary of data to write out, not as part
  of its keys


1.1 - 2013-06-02
================

* Unified :doc:`installer <../admin/guide/install-zato>` for Ubuntu, Mint, Fedora and OS X
* Added the :doc:`zato check-config <../admin/cli/check-config>` command
* Fixed a bug which lead to double execution of user-defined scheduler jobs
* Made quickstart clusters more robust when confronted with improperly configured servers,
  sanity checks are now performed before servers are started
* Changed the default value of :ref:`main.deployment_lock_expires <admin-guide-config-server-main.deployment_lock_expires>`
  so it works on 32-bit systems without a need for reconfiguring servers after they're
  created
* Made scripts generated by :doc:`zato quickstart <../admin/cli/quickstart>` relocatable
* Newly created servers start CPU_COUNT 
  `gunicorn <http://gunicorn.org>`_
  :ref:`workers <admin-guide-config-server-main.gunicorn_workers>`
  by default now, not CPU_COUNT * 2 as previously
* HAProxy load-balancer can now bind to all interfaces. Patch provided by 
  `Myroslav Opyr <http://talk.quintagroup.com/blogs/myroslav>`_
  (`quintagroup.com <http://quintagroup.com>`_).
  

1.0 - 2013-05-18 
================

* Initial release